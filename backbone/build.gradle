apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

version = '2.3.0'

android {
    compileSdkVersion 33

    dexOptions {
        preDexLibraries = false
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 120
        versionName version
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            // Filter for architectures supported by Flutter.
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'x86'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    resourcePrefix 'rsb_'
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.so', '**/*.so'])

    // These are all support libraries that should be updated when Google releases new ones
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.google.code.gson:gson:2.9.1'

    implementation 'joda-time:joda-time:2.11.1'
    implementation 'com.cronutils:cron-utils:9.2.0'
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.9.0'

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'

    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'
    implementation 'com.jakewharton.rxbinding:rxbinding-support-v4:1.0.1'
    implementation 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:1.0.1'
    implementation 'com.jakewharton.rxbinding:rxbinding-design:1.0.1'

    // Used to display UploadData and study data in various chart formats
    implementation 'com.github.PhilJay:MPAndroidChart:v2.2.3'

    implementation 'com.scottyab:aes-crypto:0.0.5'
    implementation group: 'com.j256.ormlite', name: 'ormlite-android', version: '6.1'
    implementation 'net.zetetic:android-database-sqlcipher:4.5.3@aar'

    // Libraries to help with unit testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    androidTestImplementation 'org.mockito:mockito-android:4.8.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-classloading-xstream:2.0.9'

    testImplementation 'org.robolectric:robolectric:4.8.2'
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}
project.afterEvaluate {
    publishing {
        publications {
            msdk(MavenPublication) {

                groupId 'com.medaptivehealth.researchstack'
                artifactId 'backbone'
                version version
                artifact(bundleReleaseAar)
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
                url "${System.env.HOME}/.m2/repository"
            }
        }
    }
}